{"version":3,"sources":["../app.js"],"names":["Array","intersect","result","obj","i","arguments","length","j","str","push","prototype","minus","arr","module","exports","app","baseUrl","CustomController","data","ctx","body","msg","status","status_code","message","Object","assign","throw","private_token","request","header","undefined","success","error","deploy_status","description","curl","dataType","user_id","project_id","webhook_id","serviceIds","isInit","serviceIdsArr","del_service_ids","instart_service_ids","commmon_service_ids","insertArr","current_service_ids","serviceConfig","deploy_status_text","updated_at","Date","created_at","knex","where","del","map","id_key","service_id","insert","current_service_info","webhookService","whereIn","Controller"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;AAGAA,MAAMC,SAAN,GAAkB,YAAY;AAC1B,QAAIC,SAAS,EAAb;AACA,QAAIC,MAAM,EAAV;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIC,UAAUC,MAA9B,EAAsCF,GAAtC,EAA2C;AACvC,aAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIF,UAAUD,CAAV,EAAaE,MAAjC,EAAyCC,GAAzC,EAA8C;AAC1C,gBAAIC,MAAMH,UAAUD,CAAV,EAAaG,CAAb,CAAV;AACA,gBAAI,CAACJ,IAAIK,GAAJ,CAAL,EAAe;AACXL,oBAAIK,GAAJ,IAAW,CAAX;AACH,aAFD,MAGK;AACDL,oBAAIK,GAAJ;AACA,oBAAIL,IAAIK,GAAJ,MAAaH,UAAUC,MAA3B,EAAmC;AAC/BJ,2BAAOO,IAAP,CAAYD,GAAZ;AACH;AACJ;AACJ;AACJ;AACD,WAAON,MAAP;AACH,CAlBD;AAmBA;;;;AAIAF,MAAMU,SAAN,CAAgBC,KAAhB,GAAwB,UAAUC,GAAV,EAAe;AACnC,QAAIV,SAAS,EAAb;AACA,QAAIC,MAAM,EAAV;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIQ,IAAIN,MAAxB,EAAgCF,GAAhC,EAAqC;AACjCD,YAAIS,IAAIR,CAAJ,CAAJ,IAAc,CAAd;AACH;AACD,SAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,KAAKD,MAAzB,EAAiCC,GAAjC,EAAsC;AAClC,YAAI,CAACJ,IAAI,KAAKI,CAAL,CAAJ,CAAL,EACA;AACIJ,gBAAI,KAAKI,CAAL,CAAJ,IAAe,CAAf;AACAL,mBAAOO,IAAP,CAAY,KAAKF,CAAL,CAAZ;AACH;AACJ;AACD,WAAOL,MAAP;AACH,CAdD;;AAkBAW,OAAOC,OAAP,GAAiB,eAAO;AACpBC,QAAIC,OAAJ,GAAc,0BAAd;;AADoB,QAEdC,gBAFc;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAGRC,IAHQ,EAGF;AACV,qBAAKC,GAAL,CAASC,IAAT,GAAgB;AACZC,yBAAK,MADO;AAEZC,4BAAQ,GAFI;AAGZJ,8BAHY;AAIZK,iCAAa;AAJD,iBAAhB;AAMH;AAVe;AAAA;AAAA,kCAWVC,OAXU,EAWDF,MAXC,EAWO;AACnBA,yBAASA,UAAU,GAAnB;AACA,oBAAI,OAAOE,OAAP,IAAkB,QAAtB,EAAgC;AAC5B,yBAAKL,GAAL,CAASC,IAAT,GAAgB;AACZC,6BAAKG,OADO;AAEZD,qCAAaD,MAFD;AAGZA,gCAAQ;AAHI,qBAAhB;AAKH,iBAND,MAMO;AACH,yBAAKH,GAAL,CAASC,IAAT,GAAeK,OAAOC,MAAP,CAAc,EAAd,EAAkB;AAC7BH,qCAAaD,MADgB;AAE7BA,gCAAQ;AAFqB,qBAAlB,EAGbE,OAHa,CAAf;AAIH;AACJ;AAzBe;AAAA;AAAA,qCA0BPH,GA1BO,EA0BF;AACVA,sBAAMA,OAAO,WAAb;AACA,qBAAKF,GAAL,CAASQ,KAAT,CAAe,GAAf,EAAoBN,GAApB;AACH;AA7Be;AAAA;AAAA,kDA+BM;AAClB,oBAAMO,gBAAgB,KAAKT,GAAL,CAASU,OAAT,CAAiBC,MAAjB,CAAwBF,aAA9C;AACA,oBAAIA,iBAAiBG,SAArB,EAAgC;AAC5B,yBAAKZ,GAAL,CAASQ,KAAT,CAAe,GAAf,EAAmB,MAAnB;AACH;AACJ;AApCe;AAAA;AAAA,0CAqCFzB,MArCE,EAqCM;AAClB,oBAAIA,OAAOoB,MAAP,GAAgB,GAApB,EAAyB;AACrB,yBAAKU,OAAL,CAAa9B,OAAOgB,IAApB;AACH,iBAFD,MAEO;AACH,wBAAIG,MAAMnB,OAAOgB,IAAP,CAAYM,OAAZ,IAAuB,MAAjC;AACA,yBAAKS,KAAL,CAAWZ,GAAX,EAAgBnB,OAAOoB,MAAvB;AACH;AACJ;AA5Ce;AAAA;AAAA,wCA6CJY,aA7CI,EA6CUC,WA7CV,EA6CuB;AACnC,qBAAKhB,GAAL,CAASC,IAAT,GAAgB;AACZF,0BAAM;AACFgB,uCAAeA,aADb;AAEFC,qCAAaA;AAFX,qBADM;AAKZb,4BAAQ,GALI;AAMZE,6BAAS,MANG;AAOZD,iCAAa;AAPD,iBAAhB;AASA,qBAAKJ,GAAL,CAASG,MAAT,GAAkB,GAAlB;AACH;AAxDe;AAAA;AAAA,0CAyDFY,aAzDE,EAyDYC,WAzDZ,EAyDyB;AACrC,qBAAKhB,GAAL,CAASC,IAAT,GAAgB;AACZF,0BAAM;AACFgB,uCAAeA,aADb;AAEFC,qCAAaA;AAFX,qBADM;AAKZb,4BAAQ,GALI;AAMZE,6BAAS,MANG;AAOZD,iCAAa;AAPD,iBAAhB;AASA,qBAAKJ,GAAL,CAASG,MAAT,GAAkB,GAAlB;AACH;AApEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAsEO,KAAKH,GAAL,CAASiB,IAAT,CAAc,kGAAd,EAAiH;AAChIC,8CAAU;AADsH,iCAAjH,CAtEP;;AAAA;AAsERnC,sCAtEQ;AAAA,iEAyELA,MAzEK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2EhB;;;;;;;;;AA3EgB;AAAA;AAAA,sFAmFMoC,OAnFN,EAmFcC,UAnFd,EAmFyBC,UAnFzB,EAmFoCC,UAnFpC,EAmFgDC,MAnFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAoFRC,6CApFQ,GAoFQF,cAAc,EApFtB;AAqFRG,+CArFQ,GAqFU,EArFV,EAqFc;;AACtBC,mDAtFQ,GAsFc,EAtFd,EAsFkB;;AAC1BC,mDAvFQ,GAuFc,EAvFd;AAwFRC,yCAxFQ,GAwFI,EAxFJ;AAyFRC,mDAzFQ,GAyFc,EAzFd,EAyFkB;;AACxBC,6CA1FM,GA0FU;AAClBf,mDAAe,CADG;AAElBgB,wDAAoB,MAFF;AAGlBC,gDAAY,IAAIC,IAAJ,EAHM;AAIlBC,gDAAY,IAAID,IAAJ,EAJM;AAKlBd,oDALkB;AAMlBC,0DANkB;AAOlBC;AAPkB,iCA1FV;;AAAA,qCAmGRE,MAnGQ;AAAA;AAAA;AAAA;;AAAA;AAAA,uCAoGF,KAAK3B,GAAL,CAASuC,IAAT,CAAc,wBAAd,EAAwCC,KAAxC,CAA8C;AAChDjB,6CAASA,OADuC;AAEhDC,gDAAYA,UAFoC;AAGhDC,gDAAYA;AAHoC,iCAA9C,EAIHgB,GAJG,EApGE;;AAAA;AAyGRf,2CAAWgB,GAAX,CAAe,UAACC,MAAD,EAAY;AACvBX,8CAAUtC,IAAV,CAAegB,OAAOC,MAAP,CAAc,EAAd,EAAkBuB,aAAlB,EAAiC;AAC5CU,oDAAYD;AADgC,qCAAjC,CAAf;AAGH,iCAJD;;AAzGQ,qCA8GJX,UAAUzC,MA9GN;AAAA;AAAA;AAAA;;AAAA;AAAA,uCA+GE,KAAKS,GAAL,CAASuC,IAAT,CAAc,wBAAd,EAAwCM,MAAxC,CAA+Cb,SAA/C,CA/GF;;AAAA;AAAA,kEAiHD,IAjHC;;AAAA;AAAA;AAAA,uCAoHuB,KAAKhC,GAAL,CAASuC,IAAT,CAAc,wBAAd,EAAwCC,KAAxC,CAA8C;AAC7EjB,oDAD6E;AAE7EC,0DAF6E;AAG7EC;AAH6E,iCAA9C,CApHvB;;AAAA;AAoHNqB,oDApHM;;;AA2HZ;;;;;AAKAA,qDAAqBJ,GAArB,CAAyB,UAACK,cAAD,EAAoB;AACzCd,wDAAoBvC,IAApB,CAAyBqD,eAAeH,UAAxC;AACH,iCAFD;AAGA;AACAb,sDAAsB9C,MAAMC,SAAN,CAAgB0C,aAAhB,EAA8BK,mBAA9B,CAAtB;AACA;AACAH,sDAAsBF,cAAchC,KAAd,CAAoBmC,mBAApB,CAAtB;AACA;AACAF,kDAAkBI,oBAAoBrC,KAApB,CAA0BmC,mBAA1B,CAAlB;AACA;;AAzIY,qCA0IRF,gBAAgBtC,MA1IR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uCA4Ie,KAAKS,GAAL,CAASuC,IAAT,CAAc,wBAAd,EAAwCC,KAAxC,CAA8C;AAC7DjB,6CAASA,OADoD;AAE7DC,gDAAYA,UAFiD;AAG7DC,gDAAYA;AAHiD,iCAA9C,EAIhBuB,OAJgB,CAIR,YAJQ,EAIKnB,eAJL,EAIsBY,GAJtB,EA5If;;AAAA;AA4IAtD,sCA5IA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kEAkJG,KAlJH;;AAAA;AAAA,qCAsJR2C,oBAAoBvC,MAtJZ;AAAA;AAAA;AAAA;;AAuJRuC,oDAAoBY,GAApB,CAAwB,UAACC,MAAD,EAAY;AAChCX,8CAAUtC,IAAV,CAAegB,OAAOC,MAAP,CAAc,EAAd,EAAkBuB,aAAlB,EAAiC;AAC5CU,oDAAYD;AADgC,qCAAjC,CAAf;AAGH,iCAJD;;AAvJQ,qCA4JJX,UAAUzC,MA5JN;AAAA;AAAA;AAAA;;AAAA;AAAA,uCA6JE,KAAKS,GAAL,CAASuC,IAAT,CAAc,wBAAd,EAAwCM,MAAxC,CAA+Cb,SAA/C,CA7JF;;AAAA;AAAA,kEAgKL,IAhKK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,MAEWhC,IAAIiD,UAFf;;AAmKpBjD,QAAIiD,UAAJ,GAAiB/C,gBAAjB;AACH,CApKD","file":"app.js","sourcesContent":["'use strict';\n\n/**\n *  两个数组之间 求交集\n * */\nArray.intersect = function () {\n    let result = [];\n    let obj = {};\n    for (let i = 0; i < arguments.length; i++) {\n        for (let j = 0; j < arguments[i].length; j++) {\n            let str = arguments[i][j];\n            if (!obj[str]) {\n                obj[str] = 1;\n            }\n            else {\n                obj[str]++;\n                if (obj[str] === arguments.length) {\n                    result.push(str);\n                }\n            }\n        }\n    }\n    return result;\n};\n/**\n *  数据之间 求差集\n *\n * */\nArray.prototype.minus = function (arr) {\n    let result = [];\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        obj[arr[i]] = 1;\n    }\n    for (let j = 0; j < this.length; j++) {\n        if (!obj[this[j]])\n        {\n            obj[this[j]] = 1;\n            result.push(this[j]);\n        }\n    }\n    return result;\n};\n\n\n\nmodule.exports = app => {\n    app.baseUrl = 'http://git.gag.cn/api/v3';\n    class CustomController extends app.Controller {\n        success(data) {\n            this.ctx.body = {\n                msg: '操作成功',\n                status: 'S',\n                data,\n                status_code: 200\n            };\n        }\n        error(message, status) {\n            status = status || 200;\n            if (typeof message == 'string') {\n                this.ctx.body = {\n                    msg: message,\n                    status_code: status,\n                    status: 'F'\n                };\n            } else {\n                this.ctx.body =Object.assign({}, {\n                    status_code: status,\n                    status: 'F'\n                },message);\n            }\n        }\n        notFound(msg) {\n            msg = msg || 'not found';\n            this.ctx.throw(404, msg);\n        }\n\n        check_private_token() {\n            const private_token = this.ctx.request.header.private_token;\n            if (private_token == undefined) {\n                this.ctx.throw(403,'没有权限');\n            }\n        }\n        gitlab_result(result) {\n            if (result.status < 300) {\n                this.success(result.data);\n            } else {\n                var msg = result.data.message || '操作失败';\n                this.error(msg, result.status);\n            }\n        }\n        delpoyFalie(deploy_status,description) {\n            this.ctx.body = {\n                data: {\n                    deploy_status: deploy_status,\n                    description: description\n                },\n                status: \"F\",\n                message: \"部署失败\",\n                status_code: 200\n            };\n            this.ctx.status = 200;\n        }\n        delpoySuccess(deploy_status,description) {\n            this.ctx.body = {\n                data: {\n                    deploy_status: deploy_status,\n                    description: description\n                },\n                status: \"S\",\n                message: \"部署成功\",\n                status_code: 200\n            };\n            this.ctx.status = 200;\n        }\n        * getPackageJSON() {\n            var result = yield this.ctx.curl('http://git.gag.cn/FE_BFK/webhook-test/raw/master/package.json?private_token=XfuKh_TqjqRt-KaZgyXc',{\n                dataType: 'json'\n            });\n            return result;\n        }\n        /**\n         * 插入 webhook_service_deploy\n         * @param user_id int user id 号\n         * @param project_id int 项目 id\n         * @param webhook_id webhook 项目 id\n         * @param isInit 是否初始化\n         * @param serviceIds 需要 部署的服务 ID 号\n         * */\n        *inset_service_deploy(user_id,project_id,webhook_id,serviceIds, isInit ) {\n            let serviceIdsArr = serviceIds || [];\n            let del_service_ids = []; // 需要删除的 服务器 部署信息\n            let instart_service_ids = []; // 需要插入的 服务器 部署信息\n            let commmon_service_ids = [];\n            let insertArr = [];\n            let current_service_ids = []; //当前项目服务id\n            const serviceConfig = {\n                deploy_status: 0,\n                deploy_status_text: '尚未部署',\n                updated_at: new Date(),\n                created_at: new Date(),\n                user_id,\n                project_id,\n                webhook_id\n            };\n            if (isInit) {\n                yield this.app.knex('webhook_service_deploy').where({\n                    user_id: user_id,\n                    project_id: project_id,\n                    webhook_id: webhook_id\n                }).del();\n                serviceIds.map((id_key) => {\n                    insertArr.push(Object.assign({}, serviceConfig, {\n                        service_id: id_key\n                    }))\n                });\n                if (insertArr.length) {\n                    yield this.app.knex('webhook_service_deploy').insert(insertArr);\n                }\n                return true;\n            }\n\n            const current_service_info = yield this.app.knex('webhook_service_deploy').where({\n                user_id,\n                project_id,\n                webhook_id\n            });\n\n\n            /*\n            *  以 current 为主线\n            *  current.length === 0  // 全部插入\n            *  current.length !== 0\n            * */\n            current_service_info.map((webhookService) => {\n                current_service_ids.push(webhookService.service_id);\n            });\n            // 求 服务集合的并集\n            commmon_service_ids = Array.intersect(serviceIdsArr,current_service_ids);\n            // 需要插入的 service ids\n            instart_service_ids = serviceIdsArr.minus(commmon_service_ids);\n            // 需要删除的 service ids\n            del_service_ids = current_service_ids.minus(commmon_service_ids);\n            // 先删除\n            if (del_service_ids.length) {\n                try {\n                    let result = yield this.app.knex('webhook_service_deploy').where({\n                        user_id: user_id,\n                        project_id: project_id,\n                        webhook_id: webhook_id\n                    }).whereIn('service_id',del_service_ids).del();\n                } catch (err){\n                    return false\n                }\n            }\n            // 再插入\n            if (instart_service_ids.length) {\n                instart_service_ids.map((id_key) => {\n                    insertArr.push(Object.assign({}, serviceConfig, {\n                        service_id: id_key\n                    }))\n                });\n                if (insertArr.length) {\n                    yield this.app.knex('webhook_service_deploy').insert(insertArr);\n                }\n            }\n            return true;\n        }\n    }\n    app.Controller = CustomController;\n};\n"]}