{"version":3,"sources":["../../../app/controller/deploy.js"],"names":["shell","require","SimmpleGit","_","fs","path","node_ssh","SSH","Git","deployStatusText","module","exports","DeployController","ctx","event","request","body","event_name","repo","ref","project","webhook_id","indexOf","error","tag","last","split","app","knex","where","project_id","projectArr","config","user_id","user_name","user_email","project_name","name","ssh_url","web_url","description","git_tags","status","deploy_status","deploy_status_text","updated_at","Date","length","id","update","created_at","insert","result","inset_service_deploy","success","data","Controller"],"mappings":"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","file":"deploy.js","sourcesContent":["'use strict';\nconst shell = require('shelljs');\nconst SimmpleGit = require('simple-git');\nconst _ = require('underscore');\n\nconst  fs = require('fs');\nconst path = require('path');\nconst node_ssh = require('node-ssh');\nconst SSH = new node_ssh();\nvar Git = SimmpleGit();\nconst deployStatusText = {\n    '-1': '没有查询到该项目package.json webhook配置项',\n    '100': '部署失败',\n    \"200\": 'git clone项目失败',\n    \"201\": 'git pull项目失败',\n    '300': '登录服务器失败',\n    \"400\": '本地代码克隆岛远程失败',\n    '500': '服务器部署成功',\n    '505': '服务器部署失败',\n    '600': '未知错误'\n};\nmodule.exports = app => {\n    class DeployController extends app.Controller {\n        /**\n         * 项目部署 tag_push\n         *  逻辑要求\n         *  1、新tag_push 的项目；入库项目的 user_id，user_name，user_email，project_id，project_name，ssh_url，description，description\n         *\n         * */\n        *tag_push(ctx) {\n            const event = ctx.request.body.event_name;\n            const repo = ctx.request.body;\n            const ref = ctx.request.body.ref || '';\n            const project = ctx.request.body.project;\n            let webhook_id = '';\n\n            if (event !== 'tag_push' || ref.indexOf('publish') === -1) {\n                this.error('没有部署', 402);\n                return;\n            }\n\n            var tag = _.last(repo.ref.split('/')).split('#')[1] || 'v1.0.0';\n            const projectArr = yield this.app.knex('webhook').where({\n                project_id: repo.project_id\n            });\n            var config = {\n                user_id: repo.user_id,\n                user_name: repo.user_email.split('@')[0],\n                user_email: repo.user_email,\n                project_id: repo.project_id,\n                project_name: project.name,\n                ssh_url: project.ssh_url,\n                web_url: project.web_url,\n                description: project.description,\n                git_tags:tag,\n                status:1,\n                deploy_status: 0,\n                deploy_status_text: '尚未部署',\n                updated_at: new Date()\n            };\n\n            if (projectArr.length) {\n                webhook_id = projectArr[0].id;\n                yield this.app.knex('webhook').update(config).where({\n                    project_id: repo.project_id,\n                    user_id: repo.user_id\n                });\n            } else {\n                config.created_at = new Date();\n                let result = yield this.app.knex('webhook').insert(config);\n                webhook_id = result[0];\n            }\n            if (webhook_id) {\n                yield this.inset_service_deploy(repo.user_id,repo.project_id,webhook_id,[], true);\n            }\n            this.success({data:1});\n        }\n    }\n    return DeployController;\n};\n"]}