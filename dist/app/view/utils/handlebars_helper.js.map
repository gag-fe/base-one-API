{"version":3,"sources":["../../../../app/view/utils/handlebars_helper.js"],"names":["define","locale","Handlebars","DiffMatchPatch","registerHelper","text","replace","match","p1","p2","p3","p4","p5","p6","link","timer","Date","console","log","__","obj","name","arguments","length","type","arg","_handlebarsNewlineToBreak","context","options","compare","Object","hash","keys","fn","inverse","templateCache","sourceContext","compile","$","html","template","templateContext","extend","SafeString","value","toLowerCase","splitChar","fillChar","splits","split","Array","join","source","fieldName","field","newSource","forEach","entry","values","push","newCompare","_handlebarsEachCompared","sourceFields","compareFields","JSON","stringify","parse","trim","e","ds","d","diffMatchPatch","diff_main","diff_cleanupSemantic","diff_prettyHtml","fieldname","dataList","index","sourceEntry","found","compareEntry","data","typeSame","typeIns","typeDel","ret","prototype","diffs","pattern_amp","pattern_lt","pattern_gt","pattern_para","x","op","DIFF_INSERT","DIFF_DELETE","DIFF_EQUAL"],"mappings":"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","file":"handlebars_helper.js","sourcesContent":["define([\n    'locales',\n    'handlebars',\n    'diffMatchPatch'\n], function(locale, Handlebars, DiffMatchPatch) {\n\n    /**\n     * Return a text as markdown.\n     * Currently only a little helper to replace apidoc-inline Links (#Group:Name).\n     * Should be replaced with a full markdown lib.\n     * @param string text\n     */\n    Handlebars.registerHelper('markdown', function(text) {\n        if ( ! text ) {\n          return text;\n        }\n        text = text.replace(/((\\[(.*?)\\])?\\(#)((.+?):(.+?))(\\))/mg, function(match, p1, p2, p3, p4, p5, p6) {\n          var link = p3 || p5 + '/' + p6;\n          return '<a href=\"#api-' + p5 + '-' + p6 + '\">' + link + '</a>';\n        });\n        return text;\n    });\n\n    /**\n     * start/stop timer for simple performance check.\n     */\n    var timer;\n    Handlebars.registerHelper('startTimer', function(text) {\n        timer = new Date();\n        return '';\n    });\n\n    Handlebars.registerHelper('stopTimer', function(text) {\n        console.log(new Date() - timer);\n        return '';\n    });\n\n    /**\n     * Return localized Text.\n     * @param string text\n     */\n    Handlebars.registerHelper('__', function(text) {\n        return locale.__(text);\n    });\n\n    /**\n     * Console log.\n     * @param mixed obj\n     */\n    Handlebars.registerHelper('cl', function(obj) {\n        console.log(obj);\n        return '';\n    });\n\n    /**\n     * Replace underscore with space.\n     * @param string text\n     */\n    Handlebars.registerHelper('underscoreToSpace', function(text) {\n        return text.replace(/(_+)/g, ' ');\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('assign', function(name) {\n        if(arguments.length > 0) {\n            var type = typeof(arguments[1]);\n            var arg = null;\n            if(type === 'string' || type === 'number' || type === 'boolean') arg = arguments[1];\n            Handlebars.registerHelper(name, function() { return arg; });\n        }\n        return '';\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('nl2br', function(text) {\n        return _handlebarsNewlineToBreak(text);\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('if_eq', function(context, options) {\n        var compare = context;\n        // Get length if context is an object\n        if (context instanceof Object && ! (options.hash.compare instanceof Object))\n             compare = Object.keys(context).length;\n\n        if (compare === options.hash.compare)\n            return options.fn(this);\n\n        return options.inverse(this);\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('if_gt', function(context, options) {\n        var compare = context;\n        // Get length if context is an object\n        if (context instanceof Object && ! (options.hash.compare instanceof Object))\n             compare = Object.keys(context).length;\n\n        if(compare > options.hash.compare)\n            return options.fn(this);\n\n        return options.inverse(this);\n    });\n\n    /**\n     *\n     */\n    var templateCache = {};\n    Handlebars.registerHelper('subTemplate', function(name, sourceContext) {\n        if ( ! templateCache[name])\n            templateCache[name] = Handlebars.compile($('#template-' + name).html());\n\n        var template = templateCache[name];\n        var templateContext = $.extend({}, this, sourceContext.hash);\n        return new Handlebars.SafeString( template(templateContext) );\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('toLowerCase', function(value) {\n        return (value && typeof value === 'string') ? value.toLowerCase() : '';\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('splitFill', function(value, splitChar, fillChar) {\n        var splits = value.split(splitChar);\n        return new Array(splits.length).join(fillChar) + splits[splits.length - 1];\n    });\n\n    /**\n     * Convert Newline to HTML-Break (nl2br).\n     *\n     * @param {String} text\n     * @returns {String}\n     */\n    function _handlebarsNewlineToBreak(text) {\n        return ('' + text).replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + '<br>' + '$2');\n    }\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('each_compare_list_field', function(source, compare, options) {\n        var fieldName = options.hash.field;\n        var newSource = [];\n        if (source) {\n            source.forEach(function(entry) {\n                var values = entry;\n                values['key'] = entry[fieldName];\n                newSource.push(values);\n            });\n        }\n\n        var newCompare = [];\n        if (compare) {\n            compare.forEach(function(entry) {\n                var values = entry;\n                values['key'] = entry[fieldName];\n                newCompare.push(values);\n            });\n        }\n        return _handlebarsEachCompared('key', newSource, newCompare, options);\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('each_compare_keys', function(source, compare, options) {\n        var newSource = [];\n        if (source) {\n            var sourceFields = Object.keys(source);\n            sourceFields.forEach(function(name) {\n                var values = {};\n                values['value'] = source[name];\n                values['key'] = name;\n                newSource.push(values);\n            });\n        }\n\n        var newCompare = [];\n        if (compare) {\n            var compareFields = Object.keys(compare);\n            compareFields.forEach(function(name) {\n                var values = {};\n                values['value'] = compare[name];\n                values['key'] = name;\n                newCompare.push(values);\n            });\n        }\n        return _handlebarsEachCompared('key', newSource, newCompare, options);\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('each_compare_field', function(source, compare, options) {\n        return _handlebarsEachCompared('field', source, compare, options);\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('each_compare_title', function(source, compare, options) {\n        return _handlebarsEachCompared('title', source, compare, options);\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('reformat', function(source, type){\n        if (type == 'json')\n            try {\n               return JSON.stringify(JSON.parse(source.trim()),null, \"    \");\n            } catch(e) {\n\n            }\n        return source\n    });\n\n    /**\n     *\n     */\n    Handlebars.registerHelper('showDiff', function(source, compare, options) {\n        var ds = '';\n        if(source === compare) {\n            ds = source;\n        } else {\n            if( ! source)\n                return compare;\n\n            if( ! compare)\n                return source;\n\n            var d = diffMatchPatch.diff_main(compare, source);\n            diffMatchPatch.diff_cleanupSemantic(d);\n            ds = diffMatchPatch.diff_prettyHtml(d);\n            ds = ds.replace(/&para;/gm, '');\n        }\n        if(options === 'nl2br')\n            ds = _handlebarsNewlineToBreak(ds);\n\n        return ds;\n    });\n\n    /**\n     *\n     */\n    function _handlebarsEachCompared(fieldname, source, compare, options)\n    {\n        var dataList = [];\n        var index = 0;\n        if(source) {\n            source.forEach(function(sourceEntry) {\n                var found = false;\n                if (compare) {\n                    compare.forEach(function(compareEntry) {\n                        if(sourceEntry[fieldname] === compareEntry[fieldname]) {\n                            var data = {\n                                typeSame: true,\n                                source: sourceEntry,\n                                compare: compareEntry,\n                                index: index\n                            };\n                            dataList.push(data);\n                            found = true;\n                            index++;\n                        }\n                    });\n                }\n                if ( ! found) {\n                    var data = {\n                        typeIns: true,\n                        source: sourceEntry,\n                        index: index\n                    };\n                    dataList.push(data);\n                    index++;\n                }\n            });\n        }\n\n        if (compare) {\n            compare.forEach(function(compareEntry) {\n                var found = false;\n                if (source) {\n                    source.forEach(function(sourceEntry) {\n                        if(sourceEntry[fieldname] === compareEntry[fieldname])\n                            found = true;\n                    });\n                }\n                if ( ! found) {\n                    var data = {\n                        typeDel: true,\n                        compare: compareEntry,\n                        index: index\n                    };\n                    dataList.push(data);\n                    index++;\n                }\n            });\n        }\n\n        var ret = '';\n        var length = dataList.length;\n        for (var index in dataList) {\n            if(index == (length - 1))\n                dataList[index]['_last'] = true;\n            ret = ret + options.fn(dataList[index]);\n        }\n        return ret;\n    }\n\n    var diffMatchPatch = new DiffMatchPatch();\n\n    /**\n     * Overwrite Colors\n     */\n    DiffMatchPatch.prototype.diff_prettyHtml = function(diffs) {\n      var html = [];\n      var pattern_amp = /&/g;\n      var pattern_lt = /</g;\n      var pattern_gt = />/g;\n      var pattern_para = /\\n/g;\n      for (var x = 0; x < diffs.length; x++) {\n        var op = diffs[x][0];    // Operation (insert, delete, equal)\n        var data = diffs[x][1];  // Text of change.\n        var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n            .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n        switch (op) {\n          case DIFF_INSERT:\n            html[x] = '<ins>' + text + '</ins>';\n            break;\n          case DIFF_DELETE:\n            html[x] = '<del>' + text + '</del>';\n            break;\n          case DIFF_EQUAL:\n            html[x] = '<span>' + text + '</span>';\n            break;\n        }\n      }\n      return html.join('');\n    };\n\n    // Exports\n    return Handlebars;\n});\n"]}